{"version":3,"file":"static/js/509.96379f90.chunk.js","mappings":"oIAEA,IAAIA,EAAOC,EAAQ,KACfC,EAAQD,EAAQ,KAChBE,EAAWF,EAAQ,KACnBG,EAAK,iBAAkBC,EAAAA,GAAUA,EAAAA,EAAOC,aAAeD,EAAAA,EAAOC,aAAeN,EAEjF,SAASO,EAAUC,EAAKC,GACtB,OAAyB,IAArBC,UAAUC,OACLC,EAAIJ,GAENK,EAAIL,EAAKC,EAClB,CAEA,SAASG,EAAKJ,GACZ,IAAMM,EAAMV,EAAGW,QAAQP,GAEvB,OADeN,EAAMY,EAEvB,CAEA,SAASD,EAAKL,EAAKC,GACjB,IAEE,OADAL,EAAGY,QAAQR,EAAKS,KAAKC,UAAUT,KACxB,CACT,CAAE,MAAOU,GACP,OAAO,CACT,CACF,CAgBAZ,EAASM,IAAMA,EACfN,EAASK,IAAMA,EACfL,EAASa,OAhBT,SAAiBZ,GACf,OAAOJ,EAAGiB,WAAWb,EACvB,EAeAD,EAASe,MAbT,WACE,OAAOlB,EAAGkB,OACZ,EAYAf,EAASgB,QAVT,SAAkBC,GAGhB,OAFAA,IAAUpB,EAAKoB,GAERpB,CACT,EAOAG,EAASkB,GAAKtB,EAASsB,GACvBlB,EAASmB,IAAMvB,EAASuB,IAExBC,EAAOC,QAAUrB,C,kBC/BjBoB,EAAOC,QAlBP,SAAgBC,GACd,IAAMC,EASR,SAAqBD,GACnB,IACE,OAAOZ,KAAKf,MAAM2B,EACpB,CAAE,MAAOE,GACP,OAAOF,CACT,CACF,CAfiBG,CAAWH,GAE1B,YAAeI,IAAXH,EACK,KAGFA,CACT,C,kBCRA,IAAII,EAAK,CAAC,EAwBVP,EAAOC,QAAU,CACfb,QAvBF,SAAkBP,GAChB,OAAOA,KAAO0B,EAAKA,EAAG1B,GAAO,IAC/B,EAsBEQ,QApBF,SAAkBR,EAAKC,GAErB,OADAyB,EAAG1B,GAAOC,GACH,CACT,EAkBEY,WAhBF,SAAqBb,GAEnB,SADYA,KAAO0B,WAEHA,EAAG1B,EAGrB,EAWEc,MATF,WAEE,OADAY,EAAK,CAAC,GACC,CACT,E,sBCtBA,IAAIhC,EAAQD,EAAQ,KAChBkC,EAAY,CAAC,EAajB,SAASC,EAAQjB,GACVA,IACHA,EAAId,EAAAA,EAAOgC,OAEb,IAAIC,EAAMH,EAAUhB,EAAEX,KAClB8B,GACFA,EAAIC,SAGN,SAAeC,GACbA,EAAStC,EAAMiB,EAAEsB,UAAWvC,EAAMiB,EAAEuB,UAAWvB,EAAEwB,KAAOxB,EAAEyB,IAC5D,GACF,CAsBAjB,EAAOC,QAAU,CACfH,GArBF,SAAajB,EAAKqC,GACZV,EAAU3B,GACZ2B,EAAU3B,GAAKsC,KAAKD,GAEpBV,EAAU3B,GAAO,CAACqC,GA3BhBxC,EAAAA,EAAO0C,iBACT1C,EAAAA,EAAO0C,iBAAiB,UAAWX,GAAQ,GAClC/B,EAAAA,EAAO2C,YAChB3C,EAAAA,EAAO2C,YAAY,YAAaZ,GAEhC/B,EAAAA,EAAO4C,UAAYb,CA2BvB,EAaEV,IAXF,SAAclB,EAAKqC,GACjB,IAAIK,EAAKf,EAAU3B,GACf0C,EAAGvC,OAAS,EACduC,EAAGC,OAAOD,EAAGE,QAAQP,GAAK,GAE1BV,EAAU3B,GAAO,EAErB,E","sources":["jslib/node_modules/local-storage/local-storage.js","jslib/node_modules/local-storage/parse.js","jslib/node_modules/local-storage/stub.js","jslib/node_modules/local-storage/tracking.js"],"sourcesContent":["'use strict';\n\nvar stub = require('./stub');\nvar parse = require('./parse');\nvar tracking = require('./tracking');\nvar ls = 'localStorage' in global && global.localStorage ? global.localStorage : stub;\n\nfunction accessor (key, value) {\n  if (arguments.length === 1) {\n    return get(key);\n  }\n  return set(key, value);\n}\n\nfunction get (key) {\n  const raw = ls.getItem(key);\n  const parsed = parse(raw);\n  return parsed;\n}\n\nfunction set (key, value) {\n  try {\n    ls.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction remove (key) {\n  return ls.removeItem(key);\n}\n\nfunction clear () {\n  return ls.clear();\n}\n\nfunction backend (store) {\n  store && (ls = store);\n\n  return ls;\n}\n\naccessor.set = set;\naccessor.get = get;\naccessor.remove = remove;\naccessor.clear = clear;\naccessor.backend = backend;\naccessor.on = tracking.on;\naccessor.off = tracking.off;\n\nmodule.exports = accessor;\n","'use strict';\n\nfunction parse (rawValue) {\n  const parsed = parseValue(rawValue);\n\n  if (parsed === undefined) {\n    return null;\n  }\n\n  return parsed;\n}\n\nfunction parseValue (rawValue) {\n  try {\n    return JSON.parse(rawValue);\n  } catch (err) {\n    return rawValue;\n  }\n}\n\nmodule.exports = parse;\n","'use strict';\n\nvar ms = {};\n\nfunction getItem (key) {\n  return key in ms ? ms[key] : null;\n}\n\nfunction setItem (key, value) {\n  ms[key] = value;\n  return true;\n}\n\nfunction removeItem (key) {\n  var found = key in ms;\n  if (found) {\n    return delete ms[key];\n  }\n  return false;\n}\n\nfunction clear () {\n  ms = {};\n  return true;\n}\n\nmodule.exports = {\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem,\n  clear: clear\n};\n","'use strict';\n\nvar parse = require('./parse');\nvar listeners = {};\nvar listening = false;\n\nfunction listen () {\n  if (global.addEventListener) {\n    global.addEventListener('storage', change, false);\n  } else if (global.attachEvent) {\n    global.attachEvent('onstorage', change);\n  } else {\n    global.onstorage = change;\n  }\n}\n\nfunction change (e) {\n  if (!e) {\n    e = global.event;\n  }\n  var all = listeners[e.key];\n  if (all) {\n    all.forEach(fire);\n  }\n\n  function fire (listener) {\n    listener(parse(e.newValue), parse(e.oldValue), e.url || e.uri);\n  }\n}\n\nfunction on (key, fn) {\n  if (listeners[key]) {\n    listeners[key].push(fn);\n  } else {\n    listeners[key] = [fn];\n  }\n  if (listening === false) {\n    listen();\n  }\n}\n\nfunction off (key, fn) {\n  var ns = listeners[key];\n  if (ns.length > 1) {\n    ns.splice(ns.indexOf(fn), 1);\n  } else {\n    listeners[key] = [];\n  }\n}\n\nmodule.exports = {\n  on: on,\n  off: off\n};\n"],"names":["stub","require","parse","tracking","ls","global","localStorage","accessor","key","value","arguments","length","get","set","raw","getItem","setItem","JSON","stringify","e","remove","removeItem","clear","backend","store","on","off","module","exports","rawValue","parsed","err","parseValue","undefined","ms","listeners","change","event","all","forEach","listener","newValue","oldValue","url","uri","fn","push","addEventListener","attachEvent","onstorage","ns","splice","indexOf"],"sourceRoot":""}